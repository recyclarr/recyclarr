# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build & Test

on:
  push:
    branches: [master]
    tags: [v*]
    paths:
      # Source code and tests
      - 'src/**'
      - 'tests/**'

      # Build configuration
      - '*.props'
      - '*.csproj'
      - '*.slnx'
      - '.config/dotnet-tools.json'

      # CI/CD infrastructure
      - '.github/workflows/build.yml'
      - '.github/workflows/reusable-build.yml'
      - '.github/workflows/reusable-docker.yml'
      - '.github/actions/**'
      - 'ci/**'

      # Docker
      - 'Dockerfile'
      - 'docker/**'

      # Versioning (affects build outputs)
      - 'GitVersion.yml'

      # YAML schemas (runtime validation of user configs)
      - 'schemas/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions: read-all

jobs:
  #############################################
  build-win:
    name: Build Windows
    secrets: inherit
    uses: ./.github/workflows/reusable-build.yml
    strategy:
      matrix:
        runtime: [win-x64, win-arm64]
    with:
      platform: windows-latest
      runtime: ${{ matrix.runtime }}

  #############################################
  build-linux:
    name: Build Linux
    secrets: inherit
    uses: ./.github/workflows/reusable-build.yml
    strategy:
      matrix:
        runtime: [linux-x64, linux-arm64, linux-arm]
    with:
      platform: ubuntu-latest
      runtime: ${{ matrix.runtime }}

  #############################################
  build-osx:
    name: Build Mac OS
    secrets: inherit
    uses: ./.github/workflows/reusable-build.yml
    strategy:
      matrix:
        runtime: [osx-x64, osx-arm64]
    with:
      platform: macos-latest
      runtime: ${{ matrix.runtime }}

  #############################################
  # Note: This builds the MUSL zip artifacts but isn't used in the actual docker image build
  build-musl:
    name: Build MUSL
    secrets: inherit
    uses: ./.github/workflows/reusable-build.yml
    strategy:
      matrix:
        runtime: [linux-musl-x64, linux-musl-arm, linux-musl-arm64]
    with:
      platform: ubuntu-latest
      runtime: ${{ matrix.runtime }}
      publish-args: -NoSingleFile
      skip-test: true

  #############################################
  codesign:
    name: Apple Signing
    runs-on: macos-latest
    needs: [build-osx]
    strategy:
      matrix:
        runtime:
          - osx-x64
          - osx-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Download Artifacts
        uses: ./.github/actions/download-tar
        with:
          name: ${{ matrix.runtime }}
          path: publish

      - name: Add Cert to Keychain
        # todo: Switch back to upstream when this is merged:
        # https://github.com/Apple-Actions/import-codesign-certs/pull/58
        uses: recyclarr/import-codesign-certs@master
        with:
          p12-file-base64: ${{ secrets.MAC_CERT_BASE64 }}
          p12-password: ${{ secrets.MAC_CERT_PASSWORD }}

      - name: Code Sign
        env:
          CODESIGN_IDENTITY: ${{ secrets.MAC_CODESIGN_IDENTITY }}
        run: >
          codesign --timestamp --no-strict --force
          --options=runtime
          --entitlements ci/codesign/entitlements.plist
          --sign "$CODESIGN_IDENTITY"
          "publish/recyclarr"

      - name: Notarize
        run: >-
          ci/notarize.sh
          "${{ secrets.MAC_DEV_USERNAME }}"
          "${{ secrets.MAC_DEV_PASSWORD }}"
          AVLRN599D8
          publish/recyclarr

      # Cannot staple directly to a binary:
      # https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow?language=objc#3087720
      # - name: Staple
      #   run: xcrun stapler staple -v publish/recyclarr

      - name: Upload Artifacts
        uses: ./.github/actions/upload-tar
        with:
          name: ${{ matrix.runtime }}
          path: publish

  #############################################
  docker:
    name: Docker
    # Wait on builds only to verify tests pass
    needs: [build-win, build-linux, build-osx, build-musl]
    permissions:
      packages: write
    uses: ./.github/workflows/reusable-docker.yml
    secrets: inherit

  #############################################
  test-artifact-download:
    name: Test Artifact Download
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/v')"
    needs:
      - build-win
      - build-linux
      - codesign # Depends on build-osx
      - docker # Depends on build-musl
    env:
      XZ_OPT: "-T0 -9"
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Download Artifacts
        uses: ./.github/actions/download-tar
        with:
          path: publish

  #############################################
  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    needs:
      - build-win
      - build-linux
      - build-musl
      - codesign # Depends on build-osx, and reuploads artifacts after signing
    env:
      XZ_OPT: "-T0 -9"
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0 # avoid shallow clone for GitVersion

      - name: Setup GitVersion
        uses: ./.github/actions/setup-gitversion
        id: gitversion

      - name: Download Artifacts
        uses: ./.github/actions/download-tar
        with:
          path: publish

      - name: Create Archive
        shell: pwsh
        run: >
          ci/CreateArchive.ps1
          -PublishDir publish
          -OutputDir archive

      - name: Extract Changelog
        id: changelog
        uses: ffurrer2/extract-release-notes@cae32133495112d23e3569ad04fef240ba4e7bc8 # v2.3.0

      - name: Create Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          files: |
            archive/**/recyclarr-*.zip
            archive/**/recyclarr-*.tar.xz
          body: ${{ steps.changelog.outputs.release_notes }}
          tag_name: ${{ github.event.create.ref }}
          draft: false
          prerelease: ${{ steps.gitversion.outputs.preReleaseTag != '' }}
